/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'
import { MeshTransmissionMaterial } from '@react-three/drei'
export default function IPlogo(props) {
  /*
  useFrame((state, delta) => {
    const t = (1 + Math.sin(state.clock.elapsedTime * 10)) / 2
    stripe.current.color.setRGB(1 + t * 10, 2, 20 + t * 50)
    stripe2.current.color.setRGB(1 + t * 10, 2, 20 + t * 50)
    //light2.current.intensity = 1 + t * 2
    //light.current.intensity = 1 + t * 2
  })
  const { scene } = useThree()
  useEffect(() => {
    if (!scene || !materials) return


  }, [scene])
  */
  const configGlass = {
    samples: 16,
    resolution: 256,
    transmission: 0.95,
    roughness: .11,
    clearcoat: 1,
    clearcoatRoughness: 0,
    thickness: 0,
    ior: 1.5,
    chromaticAberration: 0,
    anisotropy: 0,
    distortion: 0.0,
    distortionScale: 0.3,
    temporalDistortion: 0.5,
    attenuationDistance: 0.5,
    attenuationColor: '#ffffff',
    color: '#ffffff'
  }
  const params = {
    color: 0xffffff,
    transmission: 1,
    opacity: 1,
    metalness: 0,
    roughness: 0,
    ior: 1.5,
    thickness: 0.01,
    specularIntensity: 1,
    specularColor: 0xffffff,
    //envMapIntensity: 1,
    lightIntensity: 1,
    exposure: 1,
    transparent: true,
  }

  const configGlass2 = {
    samples: 5,
    resolution: 256,
    transmission: 0.95,
    roughness: .11,
    clearcoat: 1,
    clearcoatRoughness: 0,
    thickness: 1,
    ior: 1.1,
    chromaticAberration: 0,
    anisotropy: 0,
    distortion: 0.5,
    distortionScale: 0.3,
    temporalDistortion: 0.5,
    attenuationDistance: 1.4,
    attenuationColor: '#3665a1',
    color: '#ffffff'
  }

  const group = useRef()
  const stripe = useRef()
  const stripe2 = useRef()
  const light = useRef()
  const light2 = useRef()
  const { nodes, materials } = useGLTF('/models/iplogo.glb')
  return (
    <group ref={group} {...props} dispose={null} rotation={[0, 0, 0]} position={[-3, 0, 2]} scale={5}>


      <mesh geometry={nodes.left.geometry} material={materials['SVGMat.005']} />
      <mesh geometry={nodes.Right.geometry} material={materials['SVGMat.004']} >
        <MeshTransmissionMaterial {...configGlass} />
      </mesh>



    </group>
  )
}

useGLTF.preload('/models/iplogo.glb')
