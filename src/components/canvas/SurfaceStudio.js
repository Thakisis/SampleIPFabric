/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { MeshStandardMaterial, Color } from 'three'

export function SurfaceStudio(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/models/SurfaceStudio-transformed.glb')
  const roughnessMap = useTexture('/img/MonitorBack_R.webp')
  const backMonitor = new MeshStandardMaterial({ metalness: 1, roughnessMap: roughnessMap, color: new Color(0xd0d0d0) })

  return (
    <group ref={group} {...props} dispose={null} scale={5} >
      <group position={[0, 0, -0.04]} rotation={[0.19, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Box007.geometry} material={nodes.Box007.material} />
        <mesh castShadow receiveShadow geometry={nodes.Box008.geometry} material={nodes.Box008.material} />
        <mesh castShadow receiveShadow geometry={nodes.Glass.geometry} material={materials.Screen} />
        <mesh castShadow receiveShadow geometry={nodes.knopka1.geometry} material={nodes.knopka1.material} />
        <mesh castShadow receiveShadow geometry={nodes.knopka2.geometry} material={nodes.knopka2.material} />
        <mesh castShadow receiveShadow geometry={nodes.Lastik.geometry} material={nodes.Lastik.material} />
        <mesh castShadow receiveShadow geometry={nodes.Monitor.geometry} material={backMonitor} />
        <mesh castShadow receiveShadow geometry={nodes.Monitor_base.geometry} material={nodes.Monitor_base.material} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh040.geometry} material={nodes.Mesh040.material} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh040_1.geometry} material={nodes.Mesh040_1.material} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh040_2.geometry} material={materials.Sterzhen} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh040_3.geometry} material={nodes.Mesh040_3.material} />
        <mesh castShadow receiveShadow geometry={nodes.Petlya.geometry} material={nodes.Petlya.material} />

      </group>
      <mesh castShadow receiveShadow geometry={nodes.Base.geometry} material={materials.trackpad} />
      <mesh castShadow receiveShadow geometry={nodes.Radiator.geometry} material={nodes.Radiator.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle020.geometry} material={nodes.Rectangle020.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle021.geometry} material={nodes.Rectangle021.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line017.geometry} material={nodes.Line017.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line018.geometry} material={nodes.Line018.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle018.geometry} material={nodes.Rectangle018.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle019.geometry} material={nodes.Rectangle019.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line015.geometry} material={nodes.Line015.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line016.geometry} material={nodes.Line016.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle016.geometry} material={nodes.Rectangle016.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle017.geometry} material={nodes.Rectangle017.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line013.geometry} material={nodes.Line013.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line014.geometry} material={nodes.Line014.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle015.geometry} material={nodes.Rectangle015.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle009.geometry} material={nodes.Rectangle009.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line012.geometry} material={nodes.Line012.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line011.geometry} material={nodes.Line011.material} />
      <mesh castShadow receiveShadow geometry={nodes.Line019.geometry} material={nodes.Line019.material} />
      <mesh castShadow receiveShadow geometry={nodes.Box001.geometry} material={nodes.Box001.material} />
      <mesh castShadow receiveShadow geometry={nodes.Box002.geometry} material={nodes.Box002.material} />
      <mesh castShadow receiveShadow geometry={nodes.Rectangle026.geometry} material={nodes.Rectangle026.material} />
      <mesh castShadow receiveShadow geometry={nodes.Keyboard.geometry} material={nodes.Keyboard.material} />
      <mesh castShadow receiveShadow geometry={nodes.Buttons.geometry} material={materials.Keyboard} />
      <mesh castShadow receiveShadow geometry={nodes.Battery.geometry} material={materials['Grey Plastic']} />
      <mesh castShadow receiveShadow geometry={nodes.Mouse.geometry} material={materials.Mouse} />
      <mesh castShadow receiveShadow geometry={nodes.Mouse_base.geometry} material={nodes.Mouse_base.material} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh028.geometry} material={materials.Chrome} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh028_1.geometry} material={nodes.Mesh028_1.material} />
      <mesh castShadow receiveShadow geometry={nodes.Legs.geometry} material={materials.metal} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh035.geometry} material={nodes.Mesh035.material} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh035_1.geometry} material={nodes.Mesh035_1.material} />
    </group >
  )
}
//<mesh castShadow receiveShadow  geometry={nodes.ScreenZone.geometry} material={materials['Material.001']} />
useGLTF.preload('/models/SurfaceStudio-transformed.glb')
