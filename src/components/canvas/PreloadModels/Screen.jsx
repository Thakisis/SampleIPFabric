/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, useVideoTexture } from '@react-three/drei'

import { useStore } from '@/Store'



export default function Model(props) {
  const texture = useVideoTexture("/videos/IPFabric.mp4", { muted: false, start: true })
  const [playVideo, setPlayVideo] = useState(false)
  const group = useRef()
  const dataModel = useGLTF('/models/screen.glb')
  const { nodes, materials } = dataModel
  const { addModel } = useStore(state => state.Actions)
  useEffect(() => {

    addModel({ dataModel, modelName: "Screen" })
  }, [dataModel, addModel])
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.TopBar.geometry} material={nodes.TopBar.material} />
      <mesh geometry={nodes.BottomBar.geometry} material={nodes.BottomBar.material} />
      <mesh geometry={nodes.String.geometry} material={materials.PEEK} />
      <mesh geometry={nodes.Ring.geometry} material={nodes.Ring.material} />
      <mesh geometry={nodes.EndCapLeft.geometry} material={nodes.EndCapLeft.material} />
      <mesh geometry={nodes.EndCapRight.geometry} material={nodes.EndCapRight.material} />
      <mesh geometry={nodes.Screen.geometry} material={materials.Screen} rotation={[0, Math.PI, 0]} onClick={() => {
        setPlayVideo(true)
      }}>
        {playVideo === true ? <meshBasicMaterial map={texture} toneMapped={false} /> : <meshPhysicalMaterial></meshPhysicalMaterial>}
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/screen.glb')
