/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshTransmissionMaterial } from '@react-three/drei'
import { useStore } from '@/Store'

export default function Model(props) {
  const group = useRef()
  const dataModel = useGLTF('/models/IPFabric.glb')
  const { nodes, materials } = dataModel
  const { addModel } = useStore(state => state.Actions)
  useEffect(() => {
    addModel({ dataModel, modelName: "IPFabric" })
  }, [dataModel, addModel])

  const configGlass = {
    samples: 10,
    resolution: 256,
    transmission: 0.95,
    roughness: .2,
    clearcoat: 1,
    clearcoatRoughness: 0,
    thickness: .1,
    ior: 1.8,
    chromaticAberration: 0,
    anisotropy: 0,
    distortion: 1,
    distortionScale: 0.3,
    temporalDistortion: 0.5,
    attenuationDistance: 0.5,
    attenuationColor: '#ffffff',
    color: '#ffffff'

  }


  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Right.geometry} material={materials.BlackMetal} position={[.001, 0, 0]} />
      <mesh geometry={nodes.Left.geometry} material={materials.WhiteMetal} position={[-.001, 0, 0]} />
      <mesh geometry={nodes.Center.geometry} material={materials.Glass} >
        <MeshTransmissionMaterial {...configGlass} />
      </mesh>
      <mesh geometry={nodes.BackNeon.geometry} material={materials.Neon} position={[0, 0, .15]} />
      <mesh geometry={nodes.BackNeon.geometry} material={materials.Neon} position={[0, 0, -.15]} />
    </group>
  )
}

useGLTF.preload('/models/IPFabric.glb')
